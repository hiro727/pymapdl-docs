
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/01-apdlmath-examples/solve_sparse_matrix.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_01-apdlmath-examples_solve_sparse_matrix.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_01-apdlmath-examples_solve_sparse_matrix.py:


Use APDLMath To Perform Sparse Factorization and Solve Operations
-----------------------------------------------------------------

Using APDLMath, you can solve linear systems of equations based on
sparse or dense matrices.

.. GENERATED FROM PYTHON SOURCE LINES 9-17

.. code-block:: default

    from ansys.mapdl.core import launch_mapdl
    from ansys.mapdl.core.examples import vmfiles

    # Start MAPDL as a service and create an APDLMath object.
    mapdl = launch_mapdl()
    mm = mapdl.math









.. GENERATED FROM PYTHON SOURCE LINES 18-26

Factorize and Solve Sparse Linear Systems
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
First, run a MAPDL solve to create a .full file
We use a model from the official verification manual.

After a solve command, the full contains the assemblied stiffness
matrix, mass matrix, and the load vector.


.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: default

    out = mapdl.input(vmfiles["vm153"])








.. GENERATED FROM PYTHON SOURCE LINES 29-31

List the files in current directory


.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: default

    mapdl.list_files()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ['cleanup-ansys-ds9-503925.sh', 'PRSMEMB.rst', 'PRSMEMB0.rst', 'SCRATCH', 'PRSMEMB003.jpg', 'PRSMEMB0.emat', 'file0.log', 'file1.out', 'PRSMEMB002.jpg', '_input_tmp_.inp', 'file1.page', 'PRSMEMB.full', 'file1.err', 'PRSMEMB.emat', 'vm153.vrt', 'PRSMEMB1.rst', 'PRSMEMB.DSP', 'PRSMEMB001.jpg', 'PRSMEMB1.mode', 'file0.page', 'PRSMEMB0.esav', 'PRSMEMB0.full', 'file.lock', 'PRSMEMB.mode', '_input_tmp_.out', 'PRSMEMB1.full', 'file1.log', 'TABLE_2', 'PRSMEMB000.jpg', 'file0.err', 'PRSMEMB0.mode', 'PRSMEMB.mntr', 'PRSMEMB1.emat', 'PRSMEMB.esav', 'PRSMEMB1.esav', 'TABLE_1', 'SOLVIT.MAC']



.. GENERATED FROM PYTHON SOURCE LINES 34-41

Extract the Stiffness matrix from the ``FULL`` file, in a sparse
matrix format.

You can get help on the stiff function with ``help(mm.stiff)``

Printout the dimensions of this Sparse Matrix


.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default

    k = mm.stiff(fname="PRSMEMB.full")
    k





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Sparse APDLMath Matrix (126, 126)



.. GENERATED FROM PYTHON SOURCE LINES 45-47

Get a copy of the K Sparse Matrix as a Numpy Array


.. GENERATED FROM PYTHON SOURCE LINES 47-50

.. code-block:: default

    ky = k.asarray()
    ky





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <126x126 sparse matrix of type '<class 'numpy.float64'>'
    	with 738 stored elements in Compressed Sparse Row format>



.. GENERATED FROM PYTHON SOURCE LINES 51-55

Extract the load vector from the ``FULL`` file.

Printout the norm of this vector.


.. GENERATED FROM PYTHON SOURCE LINES 55-58

.. code-block:: default

    b = mm.rhs(fname="PRSMEMB.full")
    b.norm()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    3.472960080375275e-05



.. GENERATED FROM PYTHON SOURCE LINES 59-61

Get a copy of the load vector as a numpy array


.. GENERATED FROM PYTHON SOURCE LINES 61-63

.. code-block:: default

    by = b.asarray()








.. GENERATED FROM PYTHON SOURCE LINES 64-66

Factorize the Stifness Matrix using the MAPDL DSPARSE solver


.. GENERATED FROM PYTHON SOURCE LINES 66-68

.. code-block:: default

    s = mm.factorize(k)








.. GENERATED FROM PYTHON SOURCE LINES 69-71

Solve the linear system


.. GENERATED FROM PYTHON SOURCE LINES 71-73

.. code-block:: default

    x = s.solve(b)








.. GENERATED FROM PYTHON SOURCE LINES 74-76

Print the **norm** of the solution vector


.. GENERATED FROM PYTHON SOURCE LINES 76-78

.. code-block:: default

    x.norm()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    5.8159282970300556e-08



.. GENERATED FROM PYTHON SOURCE LINES 79-83

We check the accuracy of the solution, by verifying that

:math:`KX - B = 0`


.. GENERATED FROM PYTHON SOURCE LINES 83-87

.. code-block:: default

    kx = k.dot(x)
    kx -= b
    print("Residual error:", kx.norm() / b.norm())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Residual error: 1.5719444531467088e-15




.. GENERATED FROM PYTHON SOURCE LINES 88-90

Summary of all allocated APDLMath Objects


.. GENERATED FROM PYTHON SOURCE LINES 90-92

.. code-block:: default

    mm.status()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    APDLMATH PARAMETER STATUS-  (      5 PARAMETERS DEFINED)

      Name                   Type            Mem. (MB)       Dims            Workspace

       HSNHXX                SMAT            0.011           [126:126]               1
       KLOSLD                VEC             0.001           126             1
       PTOKWK                VEC             0.001           126             1
       UYSGBD                VEC             0.001           126             1
       XJOUQO                LSENGINE        --              --              1




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Delete all APDLMath Objects


.. GENERATED FROM PYTHON SOURCE LINES 95-96

.. code-block:: default

    mm.free()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.806 seconds)


.. _sphx_glr_download_examples_01-apdlmath-examples_solve_sparse_matrix.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: solve_sparse_matrix.py <solve_sparse_matrix.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: solve_sparse_matrix.ipynb <solve_sparse_matrix.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
